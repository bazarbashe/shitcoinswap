!!!
%html
  %head
    %meta{content: "text/html; charset=UTF-8", "http-equiv" => "Content-Type"}
    %title= t 'app_name'
    %meta{charset: "utf-8"}
    %meta{content: "width=device-width, initial-scale=1, shrink-to-fit=no", name: "viewport"}
    %link{href: "/apple-touch-icon.png", rel: "apple-touch-icon", sizes: "76x76"}
    %link{href: "/favicon-32x32.png", rel: "icon", sizes: "32x32", type: "image/png"}
    %link{href: "/favicon-16x16.png", rel: "icon", sizes: "16x16", type: "image/png"}
    %link{href: "/site.webmanifest", rel: "manifest"}
    %link{color: "#bb0000", href: "/safari-pinned-tab.svg", rel: "mask-icon"}
    %meta{content: "#bb0000", name: "msapplication-TileColor"}
    %meta{content: "#ffffff", name: "theme-color"}
    
    %meta(name="turbolinks-cache-control" content="no-cache")
    = content_for :head
    = csrf_meta_tags
    = csp_meta_tag
    - if Rails.env.production?
      = javascript_include_tag "https://cdn.jsdelivr.net/npm/vue@2.5.17/dist/vue.min.js", integrity: 'sha256-FtWfRI+thWlNz2sB3SJbwKx5PgMyKIVgwHCTwa3biXc=', crossorigin: 'anonymous'
    - else
      = javascript_include_tag "https://cdn.jsdelivr.net/npm/vue@2.5.17/dist/vue.js"
    
    = javascript_include_tag 'application', integrity: true
    = stylesheet_link_tag    'application', media: 'all'
    
    = javascript_tag do
      var STATE = {
      authenticity_token: #{raw form_authenticity_token.to_json},
      - if current_user
        balances: #{raw current_user.cached_balances_json},
        - if @asset
          openOrders: #{raw current_user.orders.open.where(base_asset: @asset).to_json}
      }
    
    - if current_user
      :coffeescript
        cable.subscriptions.create 'CachedBalancesChannel', 
          received: (balances) ->
            STATE.balances = Object.assign({}, STATE.balances, balances)
        cable.subscriptions.create 'OrdersChannel', 
          received: (order) ->
            if (order.cancelled_at || order.filled_at)
              STATE.openOrders.delete(order)
            else
              STATE.openOrders.upsert(order)
    
  %body{class: params[:controller]}
    - if current_user.try(:admin?)
      %nav.navbar.navbar-dark.bg-dark.fixed-bottom.navbar-expand-lg
        .nav-item Admin Menu 
        .nav-item= link_to 'Platforms', admin_platforms_path
        .nav-item= link_to 'Withdrawals', admin_withdrawals_path
        .nav-item= link_to 'Assets', admin_assets_path
    %nav.navbar.sticky-top.navbar-light.bg-white.border-bottom.navbar-expand-lg
      .navbar-brand.mr-auto
        = link_to image_tag('logo_name.png', height: 19), root_path, class: 'd-inline-block'

      %button.navbar-toggler{"type"=>"button", "data-toggle"=>"collapse","data-target"=>"#navbarNav","aria-controls"=>"navbarNav","aria-expanded"=>"false", "aria-label"=>"Toggle navigation"}
        %span.navbar-toggler-icon
      %div.collapse.navbar-collapse#navbarNav
        %ul.navbar-nav.ml-auto
          - if current_user
            %li.nav-item.d-inline-block#top_balance
              Balance: {{ STATE.balances["#{current_quote_asset.id}"] ? STATE.balances["#{current_quote_asset.id}"].available : 0 }}
              .dropdown.d-inline-block
                %a#dropdownMenuButton.nav-link.dropdown-toggle{"href" => "#", "aria-haspopup" => "true", "data-toggle" => "dropdown"}
                  = current_quote_asset.symbol
                .dropdown-menu.dropdown-menu-right{"aria-labelledby" => "dropdownMenuButton"}
                  - for asset in Asset.quotable
                    = link_to asset.symbol, params.to_unsafe_h.merge(quote_asset_id: asset.id), class: 'dropdown-item'
            :coffeescript
              new Vue
                data: ->
                  STATE: STATE
                el: '#top_balance'
            %li.nav-item= link_to 'My Assets', '/cached_balances', class: 'nav-link'
            %li.nav-item= link_to 'My Orders', '/orders', class: 'nav-link'
            %li.nav-item.d-inline-block
              %span Logged in as 
              %span.d-inline-block.nav-link #{current_user.email}
            %li.nav-item= link_to 'Log Out', logout_path, method: :delete, class: 'nav-link'
          - else
            / not logged in
            .dropdown.d-inline-block
              %a#dropdownMenuButton.nav-link.dropdown-toggle{"href" => "#", "aria-haspopup" => "true", "data-toggle" => "dropdown"}
                = current_quote_asset.symbol
              .dropdown-menu.dropdown-menu-right{"aria-labelledby" => "dropdownMenuButton"}
                - for asset in Asset.quotable
                  = link_to asset.symbol, {quote_asset_id: asset.id}, class: 'dropdown-item'
            .nav-item.nav-link= link_to (t '.log_in'), login_path
          .dropdown.nav-item
            %a#dropdownMenuButton.d-inline-block.nav-link.dropdown-toggle{"href" => "#", "aria-haspopup" => "true", "data-toggle" => "dropdown"}
              = I18n.locale
            .dropdown-menu.dropdown-menu-right{"aria-labelledby" => "dropdownMenuButton"}
              = link_to (t '.english'), {locale: 'en'}, class: 'dropdown-item'
              = link_to (t '.japanese'), {locale: 'ja'}, class: 'dropdown-item'

    .container
      - if notice
        .alert.alert-success= notice
      - if alert
        .alert.alert-warning= alert
    = yield
    .container
      %footer.pt-4.my-md-5.pt-md-5.border-top
        .row
          .col-md-5.text-muted.text-left
            = t '.coypright_2018', brand: current_branding.name
          .col-md-2.text-center
            = image_tag 'logo.png', class: 'mb-2', width: 24, height: 24
          .col-md-5.text-muted.text-right
            = link_to (t '.status'), page_url(:status), class: 'text-muted'
            |
            = link_to (t '.contact'), page_url(:contact), class: 'text-muted'

